{"version":3,"file":"static/js/504.03e23aa9.chunk.js","mappings":"2NACA,EAAwB,uB,SCKT,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IANAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,eAAyBH,EAAS,YAAYI,MAAK,SAAAC,GACjD,OAAON,EAAWM,EAASC,QAC5B,GACF,GAAE,CAACN,IAECF,EAEL,OAAIA,EAAQS,OAAS,GACZ,oEAIP,wBACGT,EAAQU,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACtB,OACE,yBAEI,iCACE,eAAIC,UAAWC,EAAf,2BAAsCH,MACtC,yBAAIC,EAAJ,WCXI,eAACG,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDODG,CAAO,GASnB,KAGN,C,sBEtCD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO5B,KAAKuB,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C,sDC7BeC,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,8FACeC,MACX,0FAEC1C,MAAK,SAAAC,GACJ,GAAIA,EAAS0C,GACX,OAAO1C,EAAS2C,MAEnB,IACAC,OAAM,SAAAN,GAAG,OAAIO,QAAQjB,MAAMU,EAAlB,IATd,0GAYeQ,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,WAA8BC,GAA9B,0FAAwCC,EAAxC,+BAAoD,GAApD,SACeP,MAAM,sCAAD,OACsBM,GADtB,OACiCC,EADjC,8CAGfjD,MAAK,SAAAC,GACJ,GAAIA,EAAS0C,GACX,OAAO1C,EAAS2C,MAEnB,IACAC,OAAM,SAAAN,GAAG,OAAIO,QAAQjB,MAAMU,EAAlB,IATd,2GAYeW,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,WAAiCC,GAAjC,iFACeT,MAAM,4FAAD,OAC4ES,IAE3FnD,MAAK,SAAAC,GACJ,GAAIA,EAAS0C,GACX,OAAO1C,EAAS2C,MAEnB,IACAC,OAAM,SAAAN,GAAG,OAAIO,QAAQjB,MAAMU,EAAlB,IATd,0GAYA,IAAMxC,EAAY,CAAE0C,oB,WApCLA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAoC0BM,eApCzC,SAY8B,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAwB0CG,kBAxBzD,SAYiC,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAcf,G","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","../node_modules/nanoid/index.browser.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Reviews_title__t265C\"};","import { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useParams } from 'react-router-dom';\nimport moviesApi from 'services/movies-api';\nimport css from './Reviews.module.css';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    moviesApi.fetchMovieById(movieId, '/reviews').then(response => {\n      return setReviews(response.results);\n    });\n  }, [movieId]);\n\n  if (!reviews) return;\n\n  if (reviews.length < 1) {\n    return <p>We dont have any reviews for this movie</p>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(({ author, content }) => {\n        return (\n          <li key={nanoid(5)}>\n            {\n              <>\n                <h4 className={css.title}>{`Author: ${author}`}</h4>\n                <p>{content} </p>\n              </>\n            }\n          </li>\n        );\n      })}\n    </ul>\n  );\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","async function fetchTrendingMovies() {\n  return await fetch(\n    'https://api.themoviedb.org/3/trending/all/day?api_key=6dae3b5437a0148dbe5d61c3832fc6ad'\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(err => console.error(err));\n}\n\nasync function fetchMovieById(movie_id, queryType = '') {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}${queryType}?api_key=6dae3b5437a0148dbe5d61c3832fc6ad`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(err => console.error(err));\n}\n\nasync function fetchMovieOnQuery(query) {\n  return await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=6dae3b5437a0148dbe5d61c3832fc6ad&query=${query}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(err => console.error(err));\n}\n\nconst moviesApi = { fetchTrendingMovies, fetchMovieById, fetchMovieOnQuery };\n\nexport default moviesApi;\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","moviesApi","then","response","results","length","map","author","content","className","css","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","fetchTrendingMovies","fetch","ok","json","catch","console","fetchMovieById","movie_id","queryType","fetchMovieOnQuery","query"],"sourceRoot":""}