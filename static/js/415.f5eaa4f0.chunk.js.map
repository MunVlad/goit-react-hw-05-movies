{"version":3,"file":"static/js/415.f5eaa4f0.chunk.js","mappings":"2LACA,EAAuB,yBAAvB,EAAuD,yB,SCGxC,SAASA,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClBC,EAAaF,GAASC,EAC5B,OACE,eAAaL,UAAWC,EAAxB,UACE,UAAC,KAAD,CAAMM,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMX,GAA1C,eACKQ,MAFEH,EAMZ,KAGN,C,kGChBKO,EAAQC,EAAAA,EAAAA,GAAH,8CAqBX,UAjBa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,sBAAgCC,MAAK,SAAAC,GACnCJ,EAAUI,EAAIC,QACf,GACF,GAAE,KAGD,iCACE,SAACR,EAAD,8BACA,SAAC,IAAD,CAAYb,OAAQA,MAGzB,C,sBCxBD,SAASsB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOZ,KAAKO,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C,sDC7BeC,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,8FACeC,MACX,0FAEC1B,MAAK,SAAA2B,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,IACAC,OAAM,SAAAP,GAAG,OAAIQ,QAAQlB,MAAMU,EAAlB,IATd,0GAYeS,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,WAA8BC,GAA9B,0FAAwCC,EAAxC,+BAAoD,GAApD,SACeR,MAAM,sCAAD,OACsBO,GADtB,OACiCC,EADjC,8CAGflC,MAAK,SAAA2B,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,IACAC,OAAM,SAAAP,GAAG,OAAIQ,QAAQlB,MAAMU,EAAlB,IATd,2GAYeY,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,WAAiCC,GAAjC,iFACeV,MAAM,4FAAD,OAC4EU,IAE3FpC,MAAK,SAAA2B,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,IACAC,OAAM,SAAAP,GAAG,OAAIQ,QAAQlB,MAAMU,EAAlB,IATd,0GAYA,IAAMxB,EAAY,CAAE0B,oB,WApCLA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAoC0BO,eApCzC,SAY8B,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAwB0CG,kBAxBzD,SAYiC,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAcf,G","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, title, name }) => {\n        const movieTitle = title || name;\n        return (\n          <li key={id} className={css.item}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              - {movieTitle}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport moviesApi from 'services/movies-api';\n\nconst Title = styled.h2`\n  margin-left: 20px;\n`;\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    moviesApi.fetchTrendingMovies().then(res => {\n      setMovies(res.results);\n    });\n  }, []);\n\n  return (\n    <>\n      <Title>Trending Today</Title>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","async function fetchTrendingMovies() {\n  return await fetch(\n    'https://api.themoviedb.org/3/trending/all/day?api_key=6dae3b5437a0148dbe5d61c3832fc6ad'\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(err => console.error(err));\n}\n\nasync function fetchMovieById(movie_id, queryType = '') {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}${queryType}?api_key=6dae3b5437a0148dbe5d61c3832fc6ad`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(err => console.error(err));\n}\n\nasync function fetchMovieOnQuery(query) {\n  return await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=6dae3b5437a0148dbe5d61c3832fc6ad&query=${query}`\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(err => console.error(err));\n}\n\nconst moviesApi = { fetchTrendingMovies, fetchMovieById, fetchMovieOnQuery };\n\nexport default moviesApi;\n"],"names":["MoviesList","movies","location","useLocation","className","css","map","id","title","name","movieTitle","to","state","from","Title","styled","useState","setMovies","useEffect","moviesApi","then","res","results","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","fetchTrendingMovies","fetch","response","ok","json","catch","console","fetchMovieById","movie_id","queryType","fetchMovieOnQuery","query"],"sourceRoot":""}